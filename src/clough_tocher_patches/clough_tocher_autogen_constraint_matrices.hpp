#pragma once

inline void L_L2d_ind_matrix(double L[12][12]) {
  L[0][0] = 1;
  L[0][1] = 0;
  L[0][2] = 0;
  L[0][3] = 0;
  L[0][4] = 0;
  L[0][5] = 0;
  L[0][6] = 0;
  L[0][7] = 0;
  L[0][8] = 0;
  L[0][9] = 0;
  L[0][10] = 0;
  L[0][11] = 0;
  L[1][0] = 0;
  L[1][1] = 1;
  L[1][2] = 0;
  L[1][3] = 0;
  L[1][4] = 0;
  L[1][5] = 0;
  L[1][6] = 0;
  L[1][7] = 0;
  L[1][8] = 0;
  L[1][9] = 0;
  L[1][10] = 0;
  L[1][11] = 0;
  L[2][0] = 0;
  L[2][1] = 0;
  L[2][2] = 1;
  L[2][3] = 0;
  L[2][4] = 0;
  L[2][5] = 0;
  L[2][6] = 0;
  L[2][7] = 0;
  L[2][8] = 0;
  L[2][9] = 0;
  L[2][10] = 0;
  L[2][11] = 0;
  L[3][0] = -11.0 / 2.0;
  L[3][1] = 1;
  L[3][2] = 0;
  L[3][3] = 9;
  L[3][4] = -9.0 / 2.0;
  L[3][5] = 0;
  L[3][6] = 0;
  L[3][7] = 0;
  L[3][8] = 0;
  L[3][9] = 0;
  L[3][10] = 0;
  L[3][11] = 0;
  L[4][0] = 1;
  L[4][1] = -11.0 / 2.0;
  L[4][2] = 0;
  L[4][3] = -9.0 / 2.0;
  L[4][4] = 9;
  L[4][5] = 0;
  L[4][6] = 0;
  L[4][7] = 0;
  L[4][8] = 0;
  L[4][9] = 0;
  L[4][10] = 0;
  L[4][11] = 0;
  L[5][0] = 0;
  L[5][1] = -11.0 / 2.0;
  L[5][2] = 1;
  L[5][3] = 0;
  L[5][4] = 0;
  L[5][5] = 9;
  L[5][6] = -9.0 / 2.0;
  L[5][7] = 0;
  L[5][8] = 0;
  L[5][9] = 0;
  L[5][10] = 0;
  L[5][11] = 0;
  L[6][0] = 0;
  L[6][1] = 1;
  L[6][2] = -11.0 / 2.0;
  L[6][3] = 0;
  L[6][4] = 0;
  L[6][5] = -9.0 / 2.0;
  L[6][6] = 9;
  L[6][7] = 0;
  L[6][8] = 0;
  L[6][9] = 0;
  L[6][10] = 0;
  L[6][11] = 0;
  L[7][0] = 1;
  L[7][1] = 0;
  L[7][2] = -11.0 / 2.0;
  L[7][3] = 0;
  L[7][4] = 0;
  L[7][5] = 0;
  L[7][6] = 0;
  L[7][7] = 9;
  L[7][8] = -9.0 / 2.0;
  L[7][9] = 0;
  L[7][10] = 0;
  L[7][11] = 0;
  L[8][0] = -11.0 / 2.0;
  L[8][1] = 0;
  L[8][2] = 1;
  L[8][3] = 0;
  L[8][4] = 0;
  L[8][5] = 0;
  L[8][6] = 0;
  L[8][7] = -9.0 / 2.0;
  L[8][8] = 9;
  L[8][9] = 0;
  L[8][10] = 0;
  L[8][11] = 0;
  L[9][0] = 379.0 / 448.0;
  L[9][1] = 379.0 / 448.0;
  L[9][2] = -65.0 / 448.0;
  L[9][3] = -1683.0 / 224.0;
  L[9][4] = -1683.0 / 224.0;
  L[9][5] = 9.0 / 32.0;
  L[9][6] = 171.0 / 224.0;
  L[9][7] = 171.0 / 224.0;
  L[9][8] = 9.0 / 32.0;
  L[9][9] = 6885.0 / 448.0;
  L[9][10] = -891.0 / 448.0;
  L[9][11] = -891.0 / 448.0;
  L[10][0] = -65.0 / 448.0;
  L[10][1] = 379.0 / 448.0;
  L[10][2] = 379.0 / 448.0;
  L[10][3] = 171.0 / 224.0;
  L[10][4] = 9.0 / 32.0;
  L[10][5] = -1683.0 / 224.0;
  L[10][6] = -1683.0 / 224.0;
  L[10][7] = 9.0 / 32.0;
  L[10][8] = 171.0 / 224.0;
  L[10][9] = -891.0 / 448.0;
  L[10][10] = 6885.0 / 448.0;
  L[10][11] = -891.0 / 448.0;
  L[11][0] = 379.0 / 448.0;
  L[11][1] = -65.0 / 448.0;
  L[11][2] = 379.0 / 448.0;
  L[11][3] = 9.0 / 32.0;
  L[11][4] = 171.0 / 224.0;
  L[11][5] = 171.0 / 224.0;
  L[11][6] = 9.0 / 32.0;
  L[11][7] = -1683.0 / 224.0;
  L[11][8] = -1683.0 / 224.0;
  L[11][9] = -891.0 / 448.0;
  L[11][10] = -891.0 / 448.0;
  L[11][11] = 6885.0 / 448.0;
}

inline void L_d2L_dep_matrix(double L[7][12]) {
  L[0][0] = 73.0 / 81.0;
  L[0][1] = 4.0 / 81.0;
  L[0][2] = 4.0 / 81.0;
  L[0][3] = 152.0 / 2187.0;
  L[0][4] = 35.0 / 2187.0;
  L[0][5] = -11.0 / 4374.0;
  L[0][6] = -11.0 / 4374.0;
  L[0][7] = 35.0 / 2187.0;
  L[0][8] = 152.0 / 2187.0;
  L[0][9] = 40.0 / 2187.0;
  L[0][10] = 4.0 / 2187.0;
  L[0][11] = 40.0 / 2187.0;
  L[1][0] = 53.0 / 81.0;
  L[1][1] = 14.0 / 81.0;
  L[1][2] = 14.0 / 81.0;
  L[1][3] = 163.0 / 2187.0;
  L[1][4] = 91.0 / 2187.0;
  L[1][5] = 10.0 / 2187.0;
  L[1][6] = 10.0 / 2187.0;
  L[1][7] = 91.0 / 2187.0;
  L[1][8] = 163.0 / 2187.0;
  L[1][9] = 104.0 / 2187.0;
  L[1][10] = 32.0 / 2187.0;
  L[1][11] = 104.0 / 2187.0;
  L[2][0] = 4.0 / 81.0;
  L[2][1] = 73.0 / 81.0;
  L[2][2] = 4.0 / 81.0;
  L[2][3] = 35.0 / 2187.0;
  L[2][4] = 152.0 / 2187.0;
  L[2][5] = 152.0 / 2187.0;
  L[2][6] = 35.0 / 2187.0;
  L[2][7] = -11.0 / 4374.0;
  L[2][8] = -11.0 / 4374.0;
  L[2][9] = 40.0 / 2187.0;
  L[2][10] = 40.0 / 2187.0;
  L[2][11] = 4.0 / 2187.0;
  L[3][0] = 14.0 / 81.0;
  L[3][1] = 53.0 / 81.0;
  L[3][2] = 14.0 / 81.0;
  L[3][3] = 91.0 / 2187.0;
  L[3][4] = 163.0 / 2187.0;
  L[3][5] = 163.0 / 2187.0;
  L[3][6] = 91.0 / 2187.0;
  L[3][7] = 10.0 / 2187.0;
  L[3][8] = 10.0 / 2187.0;
  L[3][9] = 104.0 / 2187.0;
  L[3][10] = 104.0 / 2187.0;
  L[3][11] = 32.0 / 2187.0;
  L[4][0] = 4.0 / 81.0;
  L[4][1] = 4.0 / 81.0;
  L[4][2] = 73.0 / 81.0;
  L[4][3] = -11.0 / 4374.0;
  L[4][4] = -11.0 / 4374.0;
  L[4][5] = 35.0 / 2187.0;
  L[4][6] = 152.0 / 2187.0;
  L[4][7] = 152.0 / 2187.0;
  L[4][8] = 35.0 / 2187.0;
  L[4][9] = 4.0 / 2187.0;
  L[4][10] = 40.0 / 2187.0;
  L[4][11] = 40.0 / 2187.0;
  L[5][0] = 14.0 / 81.0;
  L[5][1] = 14.0 / 81.0;
  L[5][2] = 53.0 / 81.0;
  L[5][3] = 10.0 / 2187.0;
  L[5][4] = 10.0 / 2187.0;
  L[5][5] = 91.0 / 2187.0;
  L[5][6] = 163.0 / 2187.0;
  L[5][7] = 163.0 / 2187.0;
  L[5][8] = 91.0 / 2187.0;
  L[5][9] = 32.0 / 2187.0;
  L[5][10] = 104.0 / 2187.0;
  L[5][11] = 104.0 / 2187.0;
  L[6][0] = 1.0 / 3.0;
  L[6][1] = 1.0 / 3.0;
  L[6][2] = 1.0 / 3.0;
  L[6][3] = 7.0 / 162.0;
  L[6][4] = 7.0 / 162.0;
  L[6][5] = 7.0 / 162.0;
  L[6][6] = 7.0 / 162.0;
  L[6][7] = 7.0 / 162.0;
  L[6][8] = 7.0 / 162.0;
  L[6][9] = 4.0 / 81.0;
  L[6][10] = 4.0 / 81.0;
  L[6][11] = 4.0 / 81.0;
}

inline void c_e_matrix(double c[5]) {
  c[0] = 3 / 2;
  c[1] = -3 / 2;
  c[2] = 1 / 4;
  c[3] = -1 / 4;
  c[4] = 0;
}
